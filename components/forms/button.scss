// TODO: remove backwards compatibility once converted properly
.Button, .button, {
  align-items: center;
  background-color: map-get($colors, "gray200");
  border: none;
  border-radius: map-get($borderRadii, "s");
  box-shadow: inset 0 0 0 1px rgba(0,0,0,.1), 0 0 0 1px rgba(map-get($colors, "gray900"), 0);
  color: map-get($colors, "gray900");
  cursor: pointer;
  display: inline-flex;
  font-family: "Averta-Semibold";
  font-weight: 600;
  font-size: map-get($fontSizes, 'xs');
  min-height: map-get($spacing, "l");
  letter-spacing: .06em;
  line-height: 1;
  min-width: map-get($spacing, "l");
  padding-left: map-get($spacing, "xm");
  padding-right: map-get($spacing, "xm");
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  user-select: none;
  white-space: nowrap;
  transition-property: all;
  transition-duration: map-get($transitionDurations, "s");
  transition-timing-function: ease;

  // color modifiers
  &.-primary {
    background-color: map-get($colors, "blue500");
    color: map-get($colors, "white");
  }

  &.-positive {
    background-color: map-get($colors, "green500");
    color: map-get($colors, "white");
  }

  &.-warning {
    background-color: map-get($colors, "yellow500");
    color: map-get($colors, "white");
  }

  &.-negative {
    background-color: map-get($colors, "red500");
    color: map-get($colors, "white");
  }

  &.-white {
    background-color: map-get($colors, "white");
    color: map-get($colors, "brand");
  }

  // Disabled button
  &.disabled, &.-disabled {
    cursor: default;
    opacity: 0.6;
    pointer-events: none;
  }

  &:disabled {
    cursor: default;
    opacity: 0.6;
  }

  // Block button
  &.-block {
    justify-content: center;
    width: 100%;
  }

  &.-rounded {
    border-radius: map-get($borderRadii, "rounded");
  }

  // size modifiers
  &.-large {
    padding-top: map-get($spacing, 'xm');
    padding-bottom: map-get($spacing, 'xm');
    //font-size:  map-get($fontSizes, 'm');
  }
}

.Button:hover {
  box-shadow: inset 0 0 0 1px rgba(0,0,0,.1), 0 3px 5px rgba(map-get($colors, "gray900"), 0.15);
}

.Button:active {
  box-shadow: inset 0 0 0 1px rgba(0,0,0,.1), inset 0 1px 3px rgba(map-get($colors, "gray900"), 0.1);
}

// Semantic colors

.Button.primary {
  background-color: map-get($colors, "blue500");
  color: map-get($colors, "white");
}

.Button.positive {
  background-color: map-get($colors, "green500");
  color: map-get($colors, "white");
}

.Button.warning {
  background-color: map-get($colors, "yellow500");
}

.Button.negative {
  background-color: map-get($colors, "red500");
  color: map-get($colors, "white");
}

// Ghost button

.button.-ghost, .Button.-ghost {
  background-color: transparent;
  box-shadow: inset 0 0 0 1px map-get($colors, "gray500"), 0 0 0 1px rgba(map-get($colors, "gray900"), 0);
  color: map-get($colors, "gray500");
}

.button.-ghost.-primary, .Button.-ghost.primary {
  background-color: transparent;
  box-shadow: inset 0 0 0 1px map-get($colors, "blue500"), 0 0 0 1px rgba(map-get($colors, "gray900"), 0);
  color: map-get($colors, "blue500");
}

.button.-ghost.-positive, .Button.-ghost.positive {
  background-color: transparent;
  box-shadow: inset 0 0 0 1px map-get($colors, "green500"), 0 0 0 1px rgba(map-get($colors, "gray900"), 0);
  color: map-get($colors, "green500");
}

.button.-ghost.-warning, .Button.-ghost.warning {
  background-color: transparent;
  box-shadow: inset 0 0 0 1px map-get($colors, "yellow500"), 0 0 0 1px rgba(map-get($colors, "gray900"), 0);
  color: map-get($colors, "yellow500");
}

.button.-ghost.-negative, .Button.-ghost.negative {
  background-color: transparent;
  box-shadow: inset 0 0 0 1px map-get($colors, "red500"), 0 0 0 1px rgba(map-get($colors, "gray900"), 0);
  color: map-get($colors, "red500");
}

.button.-ghost:hover, .Button.-ghost:hover {
  opacity: 0.6;
}

.button.-ghost:active, .Button.-ghost:active {
  opacity: 0.4;
}

// Blank button

.button.-blank,
.button.-blank.primary,
.button.-blank.positive,
.button.-blank.warning,
.button.-blank.negative {
  background-color: transparent;
  box-shadow: none;
  color: map-get($colors, "gray900");
  padding: map-get($spacing, "xs");
  min-height: map-get($spacing, "l");
}

.button.-blank:hover {
  box-shadow: none;
  opacity: .6;
}

.button.-blank:active {
  box-shadow: none;
  opacity: .4;
}

.button.-blank.primary { color: map-get($colors, "blue500"); }
.button.-blank.positive { color: map-get($colors, "green500"); }
.button.-blank.warning { color: map-get($colors, "yellow500"); }
.button.-blank.negative { color: map-get($colors, "red500"); }

// Pill button

.Button.Button--rounded {
  border-radius: map-get($borderRadii, "rounded");
}

// Block button

.Button.Button--block {
  justify-content: center;
  width: 100%;
}

// Loading state
.Button.Button--loading, .button.-loading, .Button.-loading {
  background-image: image_url('loaders/loading-grey-l.gif');
  background-position: center;
  background-repeat: no-repeat;
  background-size: map-get($spacing, "xm") map-get($spacing, "xm");
  color: transparent;

  &.primary, &.-primary {
    background-image: image_url("loaders/loading-blue.gif");
  }

  &.positive, &.-positive {
    background-image: image_url("loaders/loading-red.gif");
  }

  &.warning, &.-warning {
    background-image: image_url("loaders/loading-yellow.gif");
  }

  &.negative, &.-negative {
    background-image: image_url("loaders/loading-red.gif");
  }
}



// the mobile-btn-full modifier will make the the button full width and remove
// border radius. This is to give a more native feel.
//

.mobile-btn-full, .button.-mobile, .Button.-mobile {
  @include mobile {
    height: auto;
    padding: map-get($spacing, "xm");
    display: inherit;
    border-radius: 0;
    width: 100%;
    margin-top: map-get($spacing, "xm");
    margin-bottom: map-get($spacing, "xm");
  }
}
